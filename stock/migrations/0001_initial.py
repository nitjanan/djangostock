# Generated by Django 4.1.4 on 2024-02-15 07:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import stock.formatChecker
import stock.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_th', models.CharField(blank=True, max_length=255, null=True, verbose_name='ชื่อบริษัทไทย')),
                ('name_eng', models.CharField(blank=True, max_length=255, null=True, verbose_name='ชื่อบริษัทอังกฤษ')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='ที่อยู่')),
                ('tel', models.CharField(blank=True, max_length=255, null=True, verbose_name='เบอร์โทร')),
                ('tex', models.CharField(blank=True, max_length=255, null=True, verbose_name='เลขประจำตัวผู้เสียภาษี')),
                ('branch', models.CharField(blank=True, max_length=255, null=True, verbose_name='สาขา')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company/', verbose_name='โลโก้บริษัท')),
            ],
            options={
                'verbose_name': 'ที่อยู่ตามจดทะเบียนบริษัท',
                'verbose_name_plural': 'ข้อมูลที่อยู่ตามจดทะเบียนบริษัท',
                'db_table': 'BaseAddress',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BaseAffiliatedCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='โค้ดบริษัท')),
                ('name_sh', models.CharField(blank=True, max_length=255, null=True, verbose_name='ชื่อบริษัทย่อ')),
                ('name_th', models.CharField(blank=True, max_length=255, null=True, verbose_name='ชื่อบริษัทไทย')),
                ('name_eng', models.CharField(blank=True, max_length=255, null=True, verbose_name='ชื่อบริษัทอังกฤษ')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='ที่อยู่')),
                ('tel', models.CharField(blank=True, max_length=255, null=True, verbose_name='เบอร์โทร')),
                ('tex', models.CharField(blank=True, max_length=255, null=True, verbose_name='เลขประจำตัวผู้เสียภาษี')),
                ('branch', models.CharField(blank=True, max_length=255, null=True, verbose_name='สาขา')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company/', verbose_name='โลโก้บริษัท')),
            ],
            options={
                'verbose_name': 'สังกัดบริษัท',
                'verbose_name_plural': 'ข้อมูลสังกัดบริษัท',
                'db_table': 'BaseAffiliatedCompany',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BaseApproveStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'สถานะการอนุมัติ',
                'verbose_name_plural': 'ข้อมูลสถานะการอนุมัติ',
                'db_table': 'BaseApproveStatus',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BaseBranchCompany',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True, verbose_name='รหัสสาขาบริษัท')),
                ('code', models.CharField(max_length=255, unique=True, verbose_name='โค้ดสาขาบริษัท')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='ชื่อสาขาบริษัท')),
                ('affiliated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branch_affiliated', to='stock.baseaffiliatedcompany', verbose_name='ชื่อสังกัดบริษัท')),
            ],
            options={
                'verbose_name': 'สาขาบริษัท',
                'verbose_name_plural': 'ข้อมูลสาขาบริษัท',
                'db_table': 'BaseBranchCompany',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BaseCMType',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True, verbose_name='รหัสประเภทใบเปรียบเทียบเทียบราคา')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='ชื่อประเภทใบเปรียบเทียบเทียบราคา')),
                ('codename', models.CharField(blank=True, max_length=255, null=True, verbose_name='โค้ด')),
            ],
            options={
                'verbose_name': 'ประเภทใบเปรียบเทียบเทียบราคา',
                'verbose_name_plural': 'ข้อมูลประเภทใบเปรียบเทียบเทียบราคา',
                'db_table': 'BaseCMType',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BaseCredit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='ชื่อเครดิต')),
            ],
            options={
                'verbose_name': 'เครดิต',
                'verbose_name_plural': 'ข้อมูลเครดิต',
                'db_table': 'BaseCredit',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BaseDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='ชื่อสถานที่จัดส่ง')),
            ],
            options={
                'verbose_name': 'สถานที่จัดส่ง',
                'verbose_name_plural': 'ข้อมูลสถานที่จัดส่ง',
                'db_table': 'BaseDelivery',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BaseDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='ชื่อแผนก')),
            ],
            options={
                'verbose_name': 'แผนก',
                'verbose_name_plural': 'ข้อมูลแผนก',
                'db_table': 'BaseDepartment',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BaseDistributorGenre',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True, verbose_name='รหัสประเภทของผู้จัดจำหน่าย')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='ชื่อประเภทของผู้จัดจำหน่าย')),
            ],
            options={
                'verbose_name': 'ประเภทของผู้จัดจำหน่าย',
                'verbose_name_plural': 'ข้อมูลประเภทของผู้จัดจำหน่าย',
                'db_table': 'BaseDistributorGenre',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BaseDistributorType',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True, verbose_name='รหัสชนิดของผู้จัดจำหน่าย')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='ชื่อชนิดของผู้จัดจำหน่าย')),
            ],
            options={
                'verbose_name': 'ชนิดของผู้จัดจำหน่าย',
                'verbose_name_plural': 'ข้อมูลชนิดของผู้จัดจำหน่าย',
                'db_table': 'BaseDistributorType',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BaseGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='ชื่อเกรด')),
            ],
            options={
                'verbose_name': 'เกรด',
                'verbose_name_plural': 'ข้อมูลเกรด',
                'db_table': 'BaseGrade',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='BaseIsoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('r_code', models.TextField(max_length=255, verbose_name='รหัส iso ใบขอเบิก')),
                ('pr_code', models.TextField(max_length=255, verbose_name='รหัส iso ใบขอซื้อ')),
                ('cm_code', models.TextField(max_length=255, verbose_name='รหัส iso ใบเปรียบเทียบ')),
                ('po_code', models.TextField(max_length=255, verbose_name='รหัส iso ใบสั่งซื้อ')),
            ],
            options={
                'verbose_name': 'รหัส iso',
                'verbose_name_plural': 'ข้อมูลรหัส iso',
                'db_table': 'BaseIsoCode',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BasePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='ชื่อสิทธิการทำงาน')),
                ('codename', models.CharField(max_length=255, unique=True, verbose_name='โค้ด')),
                ('codename_th', models.CharField(max_length=255, unique=True, verbose_name='โค้ดไทย')),
                ('ap_amount_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='ยอดเงินที่อนุมัติใบเปรียบเทียบน้อยสุด')),
                ('ap_amount_max', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='ยอดเงินที่อนุมัติใบเปรียบเทียบมากสุด')),
            ],
            options={
                'verbose_name': 'สิทธิการทำงาน',
                'verbose_name_plural': 'ข้อมูลสิทธิการทำงาน',
                'db_table': 'BasePermission',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BasePrefix',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True, verbose_name='รหัสคำนำหน้านาม')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='ชื่อคำนำหน้านาม')),
            ],
            options={
                'verbose_name': 'คำนำหน้านาม',
                'verbose_name_plural': 'ข้อมูลคำนำหน้านาม',
                'db_table': 'BasePrefix',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BaseSparesType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='ชนิดอะไหล่')),
            ],
            options={
                'verbose_name': 'ชนิดอะไหล่',
                'verbose_name_plural': 'ข้อมูลชนิดอะไหล่',
                'db_table': 'BaseSparesType',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BaseUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='ชื่อหน่วยสินค้า')),
            ],
            options={
                'verbose_name': 'หน่วยสินค้า',
                'verbose_name_plural': 'ข้อมูลหน่วยสินค้า',
                'db_table': 'BaseUnit',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='BaseUrgency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='ชื่อระดับความเร่งด่วน')),
                ('description', models.TextField(blank=True, verbose_name='รายละเอียดระดับความเร่งด่วน')),
            ],
            options={
                'verbose_name': 'ระดับความเร่งด่วน',
                'verbose_name_plural': 'ข้อมูลระดับความเร่งด่วน',
                'db_table': 'BaseUrgency',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BaseVatType',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True, verbose_name='รหัสชนิดภาษี')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='ชื่อชนิดภาษี')),
            ],
            options={
                'verbose_name': 'ชนิดภาษี',
                'verbose_name_plural': 'ข้อมูลชนิดภาษี',
                'db_table': 'BaseVatType',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BaseVisible',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='ชื่อแท็บการใช้งาน')),
            ],
            options={
                'verbose_name': 'แท็บการใช้งาน',
                'verbose_name_plural': 'ข้อมูลแท็บการใช้งาน',
                'db_table': 'BaseVisible',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cart_id', models.CharField(blank=True, max_length=255)),
                ('date_add', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'ตะกร้าสินค้า',
                'verbose_name_plural': 'ข้อมูลตะกร้าสินค้า',
                'db_table': 'cart',
                'ordering': ('date_add',),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='ชื่อหมวดหมู่สินค้า')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='ลิ้งค์')),
            ],
            options={
                'verbose_name': 'หมวดหมู่สินค้า',
                'verbose_name_plural': 'ข้อมูลหมวดหมู่สินค้า',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='ComparisonPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('note', models.CharField(blank=True, max_length=255)),
                ('approver_update', models.DateField(blank=True, null=True)),
                ('examiner_update', models.DateField(blank=True, null=True)),
                ('special_approver_update', models.DateField(blank=True, null=True)),
                ('is_special_approve_cm', models.BooleanField(default=False)),
                ('select_bidder_update', models.DateField(blank=True, null=True)),
                ('ref_no', models.CharField(blank=True, max_length=255, null=True)),
                ('po_ref_no', models.CharField(blank=True, max_length=255)),
                ('is_re_approve', models.BooleanField(default=False)),
                ('amount_diff', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('address_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.baseaddress')),
                ('approver_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cp_approver_status', to='stock.baseapprovestatus')),
                ('approver_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cp_approver_user', to=settings.AUTH_USER_MODEL)),
                ('base_spares_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.basesparestype')),
                ('branch_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.basebranchcompany')),
                ('cm_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.basecmtype')),
                ('examiner_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cp_examiner_status', to='stock.baseapprovestatus')),
                ('examiner_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cp_examiner_user', to=settings.AUTH_USER_MODEL)),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ComparisonPrice',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='ComparisonPriceDistributor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount', models.CharField(blank=True, max_length=255, null=True)),
                ('total_after_discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vat', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('freight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('quotation_pdf', stock.formatChecker.ContentTypeRestrictedFileField(blank=True, null=True, upload_to='pdfs/quotation/CM/%Y/%m/%d')),
                ('is_select', models.BooleanField(default=False)),
                ('cp', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.comparisonprice')),
                ('credit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.basecredit')),
            ],
            options={
                'db_table': 'ComparisonPriceDistributor',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='CrudUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30)),
                ('address', models.CharField(blank=True, max_length=100)),
                ('age', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Distributor',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True, verbose_name='รหัสผู้จัดจำหน่าย')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='ชื่อผู้จัดจำหน่าย')),
                ('discount', models.CharField(blank=True, max_length=255, null=True, verbose_name='ส่วนลด')),
                ('credit_limit', models.CharField(blank=True, max_length=255, null=True, verbose_name='ยอดวงเงิน')),
                ('account_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='เลขบัญชี')),
                ('address', models.TextField(blank=True, null=True, verbose_name='ที่อยู่')),
                ('tel', models.CharField(blank=True, max_length=255, null=True, verbose_name='เบอร์โทร+เบอร์แฟกส์')),
                ('payment', models.CharField(blank=True, max_length=255, null=True, verbose_name='เงื่อนไขการชำระเงิน')),
                ('contact', models.CharField(blank=True, max_length=255, null=True, verbose_name='ผู้ติดต่อ')),
                ('tex', models.CharField(blank=True, max_length=255, null=True, verbose_name='เลขประจำตัวผู้เสียภาษี')),
                ('fax', models.CharField(blank=True, max_length=255, null=True, verbose_name='แฟกส์')),
                ('registration_pdf', stock.formatChecker.ContentTypeRestrictedFileField(blank=True, null=True, upload_to='pdfs/registration/distributor/%Y/%m/%d', verbose_name='หนังสือรับรองบริษัท')),
                ('affiliated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.baseaffiliatedcompany', verbose_name='สังกัดบริษัท')),
                ('credit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.basecredit', verbose_name='เครดิต')),
                ('genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.basedistributorgenre', verbose_name='ประเภทของผู้จัดจำหน่าย')),
                ('prefix', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.baseprefix', verbose_name='คำนำหน้า')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.basedistributortype', verbose_name='ชนิดของผู้จัดจำหน่าย')),
                ('vat_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.basevattype', verbose_name='ชนิดภาษี')),
            ],
            options={
                'verbose_name': 'ผู้จัดจำหน่าย',
                'verbose_name_plural': 'ข้อมูลผู้จัดจำหน่าย',
                'db_table': 'Distributor',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_pdf', stock.formatChecker.ContentTypeRestrictedFileField(blank=True, null=True, upload_to='pdfs/document/')),
            ],
            options={
                'db_table': 'Document',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=255)),
                ('postcode', models.CharField(blank=True, max_length=255)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('email', models.EmailField(blank=True, max_length=250)),
                ('token', models.CharField(blank=True, max_length=255)),
                ('created', models.DateField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'Order',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='ชื่อตำแหน่งงาน')),
            ],
            options={
                'verbose_name': 'ตำแหน่งงาน',
                'verbose_name_plural': 'ข้อมูลตำแหน่งงาน',
                'db_table': 'Position',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True, verbose_name='รหัสสินค้า')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='ชื่อสินค้า')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='ลิ้งค์')),
                ('description', models.TextField(blank=True, verbose_name='รายละเอียด')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='ราคา')),
                ('image', models.ImageField(blank=True, upload_to='product', verbose_name='รูปภาพ')),
                ('stock', models.IntegerField(blank=True, null=True, verbose_name='จำนวนสินค้าในสต็อก')),
                ('available', models.BooleanField(default=True, verbose_name='ใช้งานอยู่')),
                ('created', models.DateField(auto_now_add=True, verbose_name='วันที่สร้าง')),
                ('update', models.DateField(auto_now=True, verbose_name='วันที่อัพเดท')),
                ('affiliated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.baseaffiliatedcompany', verbose_name='สังกัดบริษัท')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.category', verbose_name='หมวดหมู่สินค้า')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.baseunit', verbose_name='หน่วยสินค้า')),
            ],
            options={
                'verbose_name': 'สินค้า',
                'verbose_name_plural': 'ข้อมูลสินค้า',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shipping', models.CharField(blank=True, max_length=255)),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount', models.CharField(blank=True, max_length=255, null=True)),
                ('total_after_discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vat', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('note', models.CharField(blank=True, max_length=255)),
                ('freight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('approver_update', models.DateField(blank=True, null=True)),
                ('created', models.DateField(default=django.utils.timezone.now)),
                ('update', models.DateField(auto_now=True)),
                ('ref_no', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('quotation_pdf', stock.formatChecker.ContentTypeRestrictedFileField(blank=True, null=True, upload_to='pdfs/quotation/PO/%Y/%m/%d')),
                ('is_receive', models.BooleanField(default=False)),
                ('receive_update', models.DateField(blank=True, null=True)),
                ('receipt_pdf', stock.formatChecker.ContentTypeRestrictedFileField(blank=True, null=True, upload_to='pdfs/receipt/RC_PO/%Y/%m/%d')),
                ('is_re_approve', models.BooleanField(default=False)),
                ('cancel_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('is_cancel', models.BooleanField(default=False)),
                ('due_receive_update', models.DateField(blank=True, null=True)),
                ('address_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.baseaddress')),
                ('approver_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approver_status_po', to='stock.baseapprovestatus')),
                ('approver_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approver_user_po', to=settings.AUTH_USER_MODEL)),
                ('branch_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.basebranchcompany')),
                ('cp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.comparisonprice')),
                ('credit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.basecredit')),
                ('delivery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.basedelivery')),
                ('distributor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.distributor')),
            ],
            options={
                'db_table': 'PurchaseOrder',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('is_receive', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'db_table': 'PurchaseOrderItem',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Receive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax_invoice', models.CharField(blank=True, max_length=255, null=True)),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount', models.CharField(blank=True, max_length=255, null=True)),
                ('total_after_discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vat', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('freight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('note', models.CharField(blank=True, max_length=255)),
                ('receive_update', models.DateField(auto_now_add=True)),
                ('created', models.DateField(blank=True, max_length=255)),
                ('update', models.DateField(auto_now=True)),
                ('ref_no', models.CharField(blank=True, default=stock.models.receive_ref_number, max_length=255, null=True)),
                ('pay', models.CharField(blank=True, max_length=255)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('branch_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.basebranchcompany')),
                ('distributor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.distributor')),
                ('po', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.purchaseorder')),
                ('receive_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receive_user', to=settings.AUTH_USER_MODEL)),
                ('vat_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.basevattype')),
            ],
            options={
                'db_table': 'Receive',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Requisition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_requisition_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('pr_ref_no', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('ref_no', models.CharField(blank=True, max_length=255, null=True)),
                ('is_edit', models.BooleanField(default=True)),
                ('memorandum_pdf', stock.formatChecker.ContentTypeRestrictedFileField(blank=True, null=True, upload_to='pdfs/memorandum/%Y/%m/%d')),
                ('address_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.baseaddress')),
                ('branch_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.basebranchcompany')),
                ('chief_approve_user_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chief_approve_user_name', to=settings.AUTH_USER_MODEL)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='name', to=settings.AUTH_USER_MODEL)),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organizer', to=settings.AUTH_USER_MODEL)),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.basedepartment')),
                ('supplies_approve_user_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplies_approve_user_name', to=settings.AUTH_USER_MODEL)),
                ('urgency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.baseurgency')),
            ],
            options={
                'db_table': 'Requisition',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signature', models.ImageField(blank=True, null=True, upload_to='signature/', verbose_name='ลายเซ็น')),
                ('branch_company', models.ManyToManyField(to='stock.basebranchcompany', verbose_name='การมองเห็นแท็ปบริษัท')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.basedepartment', verbose_name='แผนก')),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.position', verbose_name='ตำแหน่งงาน')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ผู้ใช้')),
                ('visible', models.ManyToManyField(to='stock.basevisible', verbose_name='การมองเห็นแท็ปการใช้งาน')),
            ],
            options={
                'verbose_name': 'ผู้ใช้และตำแหน่งงาน',
                'verbose_name_plural': 'ข้อมูลผู้ใช้และตำแหน่งงาน',
            },
        ),
        migrations.CreateModel(
            name='RequisitionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requisition_id', models.IntegerField()),
                ('product_name', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('machine', models.CharField(blank=True, max_length=255)),
                ('created', models.DateField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('desired_date', models.DateField(blank=True, null=True)),
                ('unit', models.CharField(blank=True, max_length=255, null=True)),
                ('urgency', models.IntegerField(blank=True, null=True)),
                ('quantity_pr', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('quantity_take', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('quantity_used', models.DecimalField(blank=True, decimal_places=4, default=0.0, max_digits=10, null=True)),
                ('is_used', models.BooleanField(default=False)),
                ('is_receive', models.BooleanField(default=False)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.product')),
                ('requisit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.requisition')),
            ],
            options={
                'db_table': 'RequisitionItem',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='ReceiveItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.purchaseorderitem')),
                ('rc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.receive')),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.baseunit')),
            ],
            options={
                'db_table': 'ReceiveItem',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='RateDistributor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_rate', models.IntegerField(blank=True, null=True)),
                ('quantity_rate', models.IntegerField(blank=True, null=True)),
                ('duration_rate', models.IntegerField(blank=True, null=True)),
                ('service_rate', models.IntegerField(blank=True, null=True)),
                ('safety_rate', models.IntegerField(blank=True, null=True)),
                ('total_rate', models.IntegerField(blank=True, null=True)),
                ('counsel', models.TextField(blank=True, null=True)),
                ('organizer_update', models.DateField(auto_now=True)),
                ('distributor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.distributor')),
                ('grade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.basegrade')),
                ('organizer_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rate_organizer_user', to=settings.AUTH_USER_MODEL)),
                ('po', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.purchaseorder')),
            ],
            options={
                'db_table': 'RateDistributor',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='PurchaseRequisition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stockman_update', models.DateField(blank=True, null=True)),
                ('purchase_update', models.DateField(blank=True, null=True)),
                ('approver_update', models.DateField(blank=True, null=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('note', models.TextField(blank=True)),
                ('ref_no', models.CharField(blank=True, max_length=255, null=True)),
                ('is_complete', models.BooleanField(default=False)),
                ('address_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.baseaddress')),
                ('approver_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approver_status', to='stock.baseapprovestatus')),
                ('approver_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approver_user', to=settings.AUTH_USER_MODEL)),
                ('branch_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.basebranchcompany')),
                ('organizer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organizer_user', to=settings.AUTH_USER_MODEL)),
                ('purchase_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purchase_status', to='stock.baseapprovestatus')),
                ('purchase_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purchase_user', to=settings.AUTH_USER_MODEL)),
                ('requisition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.requisition')),
                ('stockman_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stockman_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'PurchaseRequisition',
                'ordering': ('-id',),
            },
        ),
        migrations.AddField(
            model_name='purchaseorderitem',
            name='item',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.requisitionitem'),
        ),
        migrations.AddField(
            model_name='purchaseorderitem',
            name='po',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.purchaseorder'),
        ),
        migrations.AddField(
            model_name='purchaseorderitem',
            name='unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.baseunit'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='pr',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.purchaserequisition'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='stockman_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stockman_user_po', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='vat_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.basevattype'),
        ),
        migrations.CreateModel(
            name='PositionBasePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_permission', models.ManyToManyField(to='stock.basepermission', verbose_name='สิทธิการทำงาน')),
                ('branch_company', models.ManyToManyField(to='stock.basebranchcompany', verbose_name='สิทธิการอนุมัติตามบริษัท')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.position', verbose_name='ตำแหน่งงาน')),
            ],
            options={
                'verbose_name': 'ตำแหน่งงานและสิทธิการทำงาน',
                'verbose_name_plural': 'ข้อมูลตำแหน่งงานและสิทธิการทำงาน',
                'db_table': 'PositionBasePermission',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.CharField(max_length=250)),
                ('quantity', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created', models.DateField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.order')),
            ],
            options={
                'db_table': 'OrderItem',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='ComparisonPriceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('brand', models.CharField(blank=True, max_length=255)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('cp', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('bidder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.comparisonpricedistributor')),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.requisitionitem')),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.baseunit')),
            ],
            options={
                'db_table': 'ComparisonPriceItem',
                'ordering': ('id',),
            },
        ),
        migrations.AddField(
            model_name='comparisonpricedistributor',
            name='distributor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.distributor'),
        ),
        migrations.AddField(
            model_name='comparisonpricedistributor',
            name='vat_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.basevattype'),
        ),
        migrations.AddField(
            model_name='comparisonprice',
            name='select_bidder',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.distributor'),
        ),
        migrations.AddField(
            model_name='comparisonprice',
            name='special_approver_status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cp_special_approver_status', to='stock.baseapprovestatus'),
        ),
        migrations.AddField(
            model_name='comparisonprice',
            name='special_approver_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cp_special_approver_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('active', models.BooleanField(default=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.product')),
            ],
            options={
                'verbose_name': 'รายการตะกร้าสินค้า',
                'verbose_name_plural': 'ข้อมูลรายการตะกร้าสินค้า',
                'db_table': 'cartItem',
            },
        ),
        migrations.CreateModel(
            name='BranchCompanyBaseAdress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.baseaddress')),
                ('branch_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.basebranchcompany')),
            ],
            options={
                'verbose_name': 'บริษัทและที่อยู่ตามจดทะเบียน',
                'verbose_name_plural': 'ข้อมูลบริษัทและที่อยู่ตามจดทะเบียน',
                'db_table': 'BranchCompanyBaseAdress',
                'ordering': ('id',),
            },
        ),
        migrations.AddField(
            model_name='baseaffiliatedcompany',
            name='iso_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.baseisocode', verbose_name='รหัส iso'),
        ),
    ]
